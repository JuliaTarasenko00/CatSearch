{"mappings":"oeACA,MAAMA,EAAM,IAAI,EADhBC,EAAA,SACgBC,SAIVC,EAAOC,SAASC,cAAc,Y,IACnBC,EAAjB,MAAMC,EAAyD,QAA9CD,EAAAE,KAAKC,MAAMC,aAAaC,QAHpB,oBAG0C,IAA9CL,IAAkD,GAEnEN,EAAIY,sBACDC,MAAKC,IACJA,EAAIC,SAAQ,EAACC,GAAEA,EAAEC,KAAEA,MACjBC,WAAWF,GAAMC,CAAI,GACrB,IAEHE,MAAMC,OAET,SAAoBC,GAClB,MAAMC,EAASD,EACZE,KACC,EAACC,YACCA,EAAWC,cACXA,EAAaC,eACbA,EAAcC,UACdA,EAASC,aACTA,EAAYC,aACZA,EAAYC,eACZA,EAAcd,GACdA,MAEA,IAAIe,EAAMP,EACN,sCAAsCA,IACtC,4DACJ,MAAMQ,EAoBd,SAAmBJ,EAAcE,GAO/B,YAL0B,IAAjBF,EACHA,EAAaK,MAAM,KAAK,QACE,IAAnBH,EACPA,EAAeG,MAAM,KAAK,GAC1B,E,CA1BaC,CAAUN,EAAcE,GAErC,MAAO,6CAA6Cd,kBAChDe,WAAaN,GAAiBC,oJAIPD,GAAiBC,2CAuBpD,SAAyBS,GACvB,IAAIC,EAAiB,QACG,IAAbD,IACTC,EAAiBD,EACdE,QAAOC,QAA0B,IAAVA,IACvBf,KAAIe,GACEpB,WAAWoB,GAGTpB,WAAWoB,GAFT,UAKXF,EAAeG,OAAS,IAC1BH,EAAiBA,EAAeI,MAAM,EAAG,IAE3C,OAA8B,IAA1BJ,EAAeG,OACV,OAEFH,EAAeK,KAAK,K,CA/CTC,CAAgBf,QAOUK,yCACbH,+EAE4Bb,8CAEvD,IAGDyB,KAAK,IACRtC,EAAKwC,UAAYrB,C,CAkCnBsB,CAAWrC","sources":["src/favorite.js"],"sourcesContent":["import { filmAPI } from './js/API';\nconst API = new filmAPI();\n\nconst KEY_FAVORITE = 'favorite';\n\nconst list = document.querySelector('.js_list');\nconst favorite = JSON.parse(localStorage.getItem(KEY_FAVORITE)) ?? [];\n\nAPI.getCategoriesGenres()\n  .then(res => {\n    res.forEach(({ id, name }) => {\n      categories[id] = name;\n    });\n  })\n  .catch(Error);\n\nfunction markupFilm(favorite) {\n  const markup = favorite\n    .map(\n      ({\n        poster_path,\n        original_name,\n        original_title,\n        genre_ids,\n        release_date,\n        vote_average,\n        first_air_date,\n        id,\n      }) => {\n        let url = poster_path\n          ? `https://image.tmdb.org/t/p/original${poster_path}`\n          : 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n        const year = yearsFilm(release_date, first_air_date);\n        let genre = categoriesFilms(genre_ids);\n        return `<li class=\"search_film_img_wrap\" data-id='${id}'>\n<img src=\"${url}\" alt=\"${original_name || original_title}\"\n  width=\"395\" height=\"574\" class=\"search_film_img\"/>\n<div class=\"wrap\">\n  <div class=\"search_film_wrap\">\n    <p class=\"search_film_title\">${original_name || original_title}</p>\n    <p class=\"search_film_genre\">${genre} | ${year}</p>\n    <p class=\"stars is-hidden\">${vote_average}</p>\n  </div>\n  <button type=\"button\" class=\"js_add_collection\" data-id=\"${id}\">Add to collection</button>\n</div>\n</li>`;\n      }\n    )\n    .join('');\n  list.innerHTML = markup;\n}\n\nfunction yearsFilm(release_date, first_air_date) {\n  const year =\n    typeof release_date !== 'undefined'\n      ? release_date.split('-')[0]\n      : typeof first_air_date !== 'undefined'\n      ? first_air_date.split('-')[0]\n      : '';\n  return year;\n}\n\nfunction categoriesFilms(genreIds) {\n  let categoriesFilm = [];\n  if (typeof genreIds !== 'undefined') {\n    categoriesFilm = genreIds\n      .filter(genre => typeof genre !== 'undefined')\n      .map(genre => {\n        if (!categories[genre]) {\n          return 'Film';\n        }\n        return categories[genre];\n      });\n  }\n  if (categoriesFilm.length > 2) {\n    categoriesFilm = categoriesFilm.slice(0, 2);\n  }\n  if (categoriesFilm.length === 0) {\n    return 'Film';\n  }\n  return categoriesFilm.join(', ');\n}\n\nmarkupFilm(favorite);\n"],"names":["$f2929da3ca31033d$var$API","parcelRequire","filmAPI","$f2929da3ca31033d$var$list","document","querySelector","$f2929da3ca31033d$var$ref","$f2929da3ca31033d$var$favorite","JSON","parse","localStorage","getItem","getCategoriesGenres","then","res","forEach","id","name","categories","catch","Error","favorite1","markup","map","poster_path","original_name","original_title","genre_ids","release_date","vote_average","first_air_date","url","year","split","$f2929da3ca31033d$var$yearsFilm","genreIds","categoriesFilm","filter","genre","length","slice","join","$f2929da3ca31033d$var$categoriesFilms","innerHTML","$f2929da3ca31033d$var$markupFilm"],"version":3,"file":"favotite.fa32bc36.js.map"}